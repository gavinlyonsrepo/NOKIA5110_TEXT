/*!
	@file NOKIA5110_BITMAP.ino
	@brief Test file for NOKIA5110_TEXT showing how to fill display bitmap's, software SPI
	@details URL: https://github.com/gavinlyonsrepo/NOKIA5110_TEXT
	@test
		-# Test 31 bitmap 84x48px Full Screen  
		-# Test 32 bitmap 84x24px half screen 
*/

// Include the library
#include <NOKIA5110_TEXT.h>

// LCD Nokia 5110 pinout left to right
// RST / CE / DC / DIN / CLK / VCC/ LIGHT / GND

#define RST 2 // Reset pin
#define CE 3 // Chip enable
#define DC 4 // data or command
#define DIN 5 // Serial Data input
#define CLK 6 // Serial clock

// Create an LCD object
NOKIA5110_TEXT mylcd(RST, CE, DC, DIN, CLK);

#define inverse  false
#define contrast 0xB2 // default is 0xBF set in LCDinit, Try 0xB1 - 0xBF if your display is too dark/dim
#define bias 0x13 // LCD bias mode 1:48: Try 0x12 , 0x13 or 0x14

/**< 'image1 , snake splashscreen', 84x48px Full Screen data vertical addressed */
const PROGMEM  unsigned char mybitmap[504] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xf8, 0x7c,
  0x7c, 0x20, 0x00, 0xe0, 0xe0, 0xf0, 0xf0, 0xf0, 0x80, 0x00, 0x00, 0xe0, 0xf8, 0xf8, 0xfc, 0x38,
  0x00, 0xe0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf8, 0x80, 0x00, 0x10, 0x78, 0x7c, 0xfc, 0xfc, 0x00, 0x80,
  0xe0, 0xf0, 0xf8, 0xf8, 0xf0, 0xe4, 0x7c, 0x7e, 0xbe, 0x9e, 0x1c, 0x18, 0xf0, 0x30, 0x30, 0x90,
  0x90, 0x18, 0x98, 0xc8, 0xc8, 0xcc, 0x0c, 0xce, 0xce, 0xe6, 0xfe, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x7f, 0x7f, 0x73,
  0x31, 0x30, 0xb8, 0xf8, 0xf8, 0xf8, 0xf8, 0xa1, 0xd7, 0xff, 0xff, 0x07, 0x1f, 0x7e, 0x78, 0x7f,
  0x7f, 0x3f, 0x8f, 0xe0, 0xfc, 0xff, 0xff, 0x3e, 0x30, 0x1b, 0x7f, 0x7f, 0x7f, 0x6f, 0x0f, 0x77,
  0xf9, 0xff, 0xff, 0x3f, 0x3f, 0x7b, 0xe3, 0xe3, 0x0f, 0x3f, 0xfe, 0xfe, 0xef, 0x77, 0x78, 0x38,
  0x03, 0x07, 0x03, 0x07, 0xff, 0x00, 0x0f, 0xff, 0xff, 0x7f, 0x00, 0x7f, 0x7f, 0x3f, 0x30, 0xf0,
  0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x1c, 0x1c, 0x1e, 0x0f, 0x0f, 0x07, 0x07, 0x03, 0x01, 0x80, 0x80, 0x81, 0x41, 0x40, 0x80,
  0x60, 0xa0, 0x60, 0xa0, 0x60, 0xa0, 0xe1, 0x41, 0x61, 0x79, 0x34, 0x34, 0x08, 0x04, 0x24, 0x32,
  0x2b, 0x25, 0x3d, 0x1a, 0x44, 0x45, 0xc5, 0x44, 0x04, 0x08, 0xe0, 0xc0, 0x80, 0x80, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x32, 0x23, 0x31, 0x30, 0x18, 0x18, 0x0c, 0x0c, 0x0e, 0x0e,
  0x07, 0x07, 0x07, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xd8, 0x6c, 0x06, 0x83, 0xb5, 0xea, 0x11,
  0x09, 0x84, 0x80, 0x86, 0x03, 0x02, 0x01, 0x02, 0x01, 0x01, 0x05, 0x00, 0x01, 0x01, 0x01, 0x78,
  0x99, 0x00, 0x00, 0x1c, 0x0e, 0x86, 0x62, 0x22, 0x12, 0x8f, 0x43, 0x23, 0x13, 0x0f, 0x8b, 0x45,
  0x27, 0x27, 0x27, 0x24, 0x24, 0x24, 0x24, 0x04, 0x80, 0x08, 0x10, 0x20, 0xe0, 0x30, 0xe8, 0xc8,
  0x90, 0x10, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x9c, 0x29,
  0x24, 0x6c, 0x76, 0x67, 0x47, 0x00, 0x00, 0x92, 0x92, 0xd0, 0x9c, 0xd8, 0x70, 0x00, 0xe0, 0x10,
  0x08, 0x04, 0x02, 0xe1, 0x30, 0x18, 0xc4, 0xe6, 0xf1, 0xf8, 0xf0, 0xd0, 0x83, 0x00, 0x00, 0x0c,
  0x02, 0x01, 0x00, 0x1c, 0x36, 0x0a, 0x33, 0x83, 0x05, 0x25, 0x27, 0x07, 0x07, 0x24, 0x04, 0x84,
  0x83, 0x93, 0x67, 0xff, 0x7f, 0xfe, 0xf8, 0x00, 0x01, 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x07, 0x07, 0x18, 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x11, 0x31, 0x10,
  0x30, 0x31, 0x20, 0x28, 0x08, 0x00, 0x11, 0x10, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22,
  0x22, 0x20, 0x20, 0x22, 0x00, 0x10, 0x10, 0x10, 0x0d, 0x27, 0x30, 0x37, 0x24, 0x2d, 0x29, 0x29,
  0x29, 0x29, 0x20, 0x24, 0x35, 0x13, 0x1b, 0x19, 0x1a, 0x1a, 0x1b, 0x1a, 0x0a, 0x09, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

/**<  'image2 lighting symbols', 84x24px half screen, data vertical addressed */
const PROGMEM unsigned char mybitmap2[252] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x7f, 0x7f, 0x3f, 0x3f, 0x1f, 0x0f, 0x0f, 0x07, 0x87, 0xc3, 0xe3, 0xf9, 0xfd, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0x3f, 0x3f, 0x1f, 0x0f,
  0x0f, 0x07, 0x87, 0xc3, 0xe3, 0xf9, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfb,
  0xf1, 0xf1, 0xf0, 0xf0, 0xe0, 0xe0, 0x60, 0x20, 0x00, 0x00, 0x04, 0x06, 0x07, 0x07, 0x0f, 0x0f,
  0x8f, 0x8f, 0xdf, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xfb, 0xf1, 0xf1, 0xf0, 0xf0, 0xe0, 0xe0,
  0x60, 0x20, 0x00, 0x00, 0x04, 0x06, 0x07, 0x07, 0x0f, 0x0f, 0x8f, 0x8f, 0xdf, 0xdf, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0x9f, 0xc7, 0xc3, 0xe1, 0xe0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc,
  0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf,
  0x9f, 0xc7, 0xc3, 0xe1, 0xe0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfc, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  delay(50);
  mylcd.LCDInit(inverse, contrast, bias); // init  the LCD
  mylcd.LCDClear(0x00); // Clear whole screen
  mylcd.LCDFont(LCDFont_Default); // Set the font
  mylcd.LCDgotoXY(0, 0); // (go to (X , Y) (0-84 columns, 0-5 blocks) top left corner
  mylcd.LCDString("BITMAP TEST"); //print
  delay(2000);
}

void loop() {
  // Test half size bitmap  252 bytes
  mylcd.LCDgotoXY(0, 0);
  mylcd.LCDCustomChar(mybitmap2, sizeof(mybitmap2) / sizeof(unsigned char), LCDPadding_None, true);
  mylcd.LCDgotoXY(0, 4);
  mylcd.LCDString("Error : 1202");
  delay(5000);
  mylcd.LCDClear(0x00);

  // Test full size bitmap 504 bytes
  mylcd.LCDCustomChar(mybitmap, sizeof(mybitmap) / sizeof(unsigned char), LCDPadding_None, true);
  delay(5000);
  mylcd.LCDClear(0x00);
}
